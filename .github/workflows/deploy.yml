name: Deploy EC2 with Apache + Lacework IaC Scan

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  security-events: write
  pull-requests: write

jobs:
  Initialize:
    name: Initialize Tools
    runs-on: ubuntu-latest
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Test Tools
        run: |
          aws --version
          terraform --version  
  
  Lacework-Scanner:
    name: 🔍 Lacework IaC Scan
    needs: Initialize
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Create environment variables file
        run: |
          env | grep "GITHUB_\\|LW_\\|CI_" > env.list
          echo "LW_ACCOUNT=${{ secrets.LW_ACCOUNT }}" >> env.list
          echo "LW_API_KEY=${{ secrets.LW_API_KEY }}" >> env.list
          echo "LW_API_SECRET=${{ secrets.LW_API_SECRET }}" >> env.list

      - name: Run Lacework IaC Scan and fail on Critical findings
        id: scan
        run: |
            set -o pipefail
            OUTPUT=$(docker run --rm \
              --env-file env.list \
              -v "$PWD:/workdir" \
              -w /workdir \
              lacework/codesec-iac \
              lacework iac scan --directory /workdir 2>&1)

            echo "=== BEGIN SCAN OUTPUT ==="
            echo "$OUTPUT"
            echo "=== END SCAN OUTPUT ==="

            if echo "$OUTPUT" | grep -i "Critical" | grep -i "false"; then
              echo "🚨 Foundd Critical IaC findings with PASS = false. Failing the job."
              exit 1
            else
              echo "✅ No critical failing findings detected."
            fi

      - name: Upload Scan Reports (if any)
        uses: actions/upload-artifact@v4
        with:
          name: Lacework IaC Reports
          path: /tmp/iac_reports/*

      - name: Publish IaC Scan Summary
        run: |
          echo "Summary not available because JSON reports are not generated with current docker CLI."

  Terraform-Deploy:
      name: Terraform Deploy
      needs: Lacework-Scanner
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Code
          uses: actions/checkout@v3

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
            aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

        - name: Terraform Init & Plan
          run: |
            terraform init
            terraform plan -out=plan.tfplan
            
        - name: Terraform Apply
          run: terraform apply --auto-approve plan.tfplan